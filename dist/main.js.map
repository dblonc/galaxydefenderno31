{"version":3,"sources":["webpack://galaxydefenderno31/./src/ship.js","webpack://galaxydefenderno31/./src/script.js"],"names":["x","y","r","a","color","this","ctx","strokeStyle","linewidth","beginPath","moveTo","Math","cos","sin","lineTo","closePath","stroke","fillStyle","fill","canvas","document","getElementById","getContext","width","height","fillRect","keys","Projectile","radius","velocity","arc","PI","ship1","Ship","draw","shipb","setInterval","clearRect","window","addEventListener","e","keyCode"],"mappings":"mMAgDA,E,WA/CI,WAAYA,EAAGC,EAAGC,EAAGC,EAAGC,I,4FAAO,SAC3BC,KAAKL,EAAIA,EACTK,KAAKJ,EAAIA,EACTI,KAAKH,EAAIA,EACTG,KAAKF,EAAIA,EACTE,KAAKD,MAAQA,E,yCAKjB,WACIE,IAAIC,YAAc,MAClBD,IAAIE,UAAY,IAChBF,IAAIG,YACJH,IAAII,OACAL,KAAKL,EAAIK,KAAKH,EAAIS,KAAKC,IAAIP,KAAKF,GAChCE,KAAKJ,EAAII,KAAKH,EAAIS,KAAKE,IAAIR,KAAKF,IAEpCG,IAAIQ,OACAT,KAAKL,EAAIK,KAAKH,GAAKS,KAAKC,IAAIP,KAAKF,GAAKQ,KAAKE,IAAIR,KAAKF,IACpDE,KAAKJ,EAAII,KAAKH,GAAKS,KAAKE,IAAIR,KAAKF,GAAKQ,KAAKC,IAAIP,KAAKF,KAExDG,IAAIQ,OACAT,KAAKL,EAAIK,KAAKH,GAAKS,KAAKC,IAAIP,KAAKF,GAAKQ,KAAKE,IAAIR,KAAKF,IACpDE,KAAKJ,EAAII,KAAKH,GAAKS,KAAKE,IAAIR,KAAKF,GAAKQ,KAAKC,IAAIP,KAAKF,KAExDG,IAAIS,YACJT,IAAIU,SACJV,IAAIW,UAAY,MAChBX,IAAIY,Y,4LC3BZ,IAAMC,EAASC,SAASC,eAAe,cACjCf,EAAMa,EAAOG,WAAW,MAC9BH,EAAOI,MAAQ,IACfJ,EAAOK,OAAS,IAChBlB,EAAIW,UAAY,QAChBX,EAAImB,SAAS,EAAG,EAAGN,EAAOI,MAAOJ,EAAOK,QAGxCE,KAAO,GACP,IAGMC,E,WACJ,WAAY3B,EAAGC,EAAG2B,EAAQxB,EAAOyB,I,4FAAS,SACxCxB,KAAKL,EAAIA,EACTK,KAAKJ,EAAIA,EACTI,KAAKuB,OAASA,EACdvB,KAAKD,MAAQA,EACbC,KAAKwB,SAAWA,EAChBxB,KAAKqB,KAAO,G,yCAGd,WACApB,EAAIG,YACJH,EAAIwB,IAAIzB,KAAKL,EAAGK,KAAKJ,EAAGI,KAAKuB,OAAQ,EAAW,EAARjB,KAAKoB,IAAM,GACnDzB,EAAIW,UAAYZ,KAAKD,MACrBE,EAAIY,U,sBASAc,EAAQ,IAAIC,EAAK,GAAId,EAAOK,OAAO,EAAE,GAAM,EAAMb,KAAKoB,GAAI,OAChEC,EAAME,OACN,IAAMC,EAAQ,IAAIR,EAAWK,EAAMhC,EAAI,GAAIgC,EAAM/B,EAAG,EAAG,OAAQ,MAC/DkC,EAAMD,OAeNE,aAbA,WACE9B,EAAI+B,UAAU,EAAG,EAAGlB,EAAOI,MAAOJ,EAAOK,QACzClB,EAAImB,SAAS,EAAG,EAAGN,EAAOI,MAAOJ,EAAOK,QACxClB,EAAIW,UAAY,QAsBZS,KAAK,KAAOM,EAAM/B,EAAI,KAAM+B,EAAM/B,GAAK,GACvCyB,KAAK,KAAOM,EAAM/B,EAAI,MAAO+B,EAAM/B,GAAK,GACxCyB,KAAK,KAAOM,EAAMhC,EAAI,KAAMgC,EAAMhC,GAAK,GACvC0B,KAAK,KAAOM,EAAMhC,EAAI,MAAOgC,EAAMhC,GAAK,GAvB5CgC,EAAME,OACNC,EAAMD,SAOY,IA/CR,IAmDZI,OAAOC,iBAAkB,WAAY,SAAUC,GAC7CnC,KAAKqB,KAAKc,EAAEC,UAAW,KAGzBH,OAAOC,iBAAkB,SAAU,SAAUC,GAC3CnC,KAAKqB,KAAKc,EAAEC,UAAW,K","file":"main.js","sourcesContent":["class Ship {\n    constructor(x, y, r, a, color) {\n        this.x = x\n        this.y = y\n        this.r = r\n        this.a = a\n        this.color = color\n\n    }\n\n\n    draw() {\n        ctx.strokeStyle = \"red\";\n        ctx.linewidth = 30 / 20;\n        ctx.beginPath();\n        ctx.moveTo(\n            this.x + this.r * Math.cos(this.a),\n            this.y - this.r * Math.sin(this.a)\n        );\n        ctx.lineTo(\n            this.x - this.r * (Math.cos(this.a) + Math.sin(this.a)),\n            this.y + this.r * (Math.sin(this.a) - Math.cos(this.a))\n        );\n        ctx.lineTo(\n            this.x - this.r * (Math.cos(this.a) - Math.sin(this.a)),\n            this.y + this.r * (Math.sin(this.a) + Math.cos(this.a))\n        );\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fillStyle = \"red\"\n        ctx.fill();\n\n\n    }\n\n    // moveShip() {\n    // if (keys[38] && this.y > 25) { this.y -= 7 }\n    // if (keys[40] && this.y < 475) { this.y += 7 }\n    // if (keys[37] && this.x > 25) { this.x -= 7 }\n    // if (keys[39] && this.x < 675) { this.x += 7 }\n\n    // }\n\n\n\n\n}\n\nexport default Ship;","import Ship from './ship'\n\n//canvas\nconst canvas = document.getElementById('gameScreen');\nconst ctx = canvas.getContext(\"2d\");\ncanvas.width = 700;\ncanvas.height = 500;\nctx.fillStyle = \"black\";\nctx.fillRect(0, 0, canvas.width, canvas.height)\nconst FPS = 60;\nlet score = 0;\nkeys = [];\nconst space = false;\n\n\nclass Projectile{\n  constructor(x, y, radius, color, velocity){\n    this.x = x\n    this.y = y\n    this.radius = radius\n    this.color = color\n    this.velocity = velocity\n    this.keys = []\n  }\n\n  draw(){\n  ctx.beginPath()\n  ctx.arc(this.x, this.y, this.radius, 0, Math.PI*2, false)\n  ctx.fillStyle = this.color\n  ctx.fill\n\n  }\n \n  \n}\n\n\n\nconst ship1 = new Ship(35, canvas.height/2,30/2, 0/180*Math.PI, 'red')\nship1.draw();\nconst shipb = new Projectile(ship1.x + 10, ship1.y, 5, 'blue', null)\nshipb.draw();\n\nfunction update() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n  ctx.fillRect(0, 0, canvas.width, canvas.height)\n  ctx.fillStyle = \"black\";\n  moveShip();\n  ship1.draw();\n  shipb.draw();\n\n\n\n}\n\n\nsetInterval(update, 1000 / FPS);\n\n \n\nwindow.addEventListener(('keydown'), function (e) {\n  this.keys[e.keyCode] = true;\n  \n});\nwindow.addEventListener(('keyup'), function (e) {\n  this.keys[e.keyCode] = false;\n});\nfunction moveShip() {\n  if (keys[38] && ship1.y > 25) { ship1.y -= 7 }\n  if (keys[40] && ship1.y < 475) { ship1.y += 7 }\n  if (keys[37] && ship1.x > 25) { ship1.x -= 7 }\n  if (keys[39] && ship1.x < 675) { ship1.x += 7 }\n\n}\nfunction fire() {\n  if (keys[32]) {\n    shipb.draw()\n  }\n}\n"],"sourceRoot":""}